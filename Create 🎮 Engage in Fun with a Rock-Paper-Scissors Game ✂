import tkinter as tk
import random

# Function to determine the winner of the round
def determine_winner(user_choice, computer_choice):
    if user_choice == computer_choice:
        return "It's a tie!"
    elif (user_choice == 'rock' and computer_choice == 'scissors') or \
         (user_choice == 'scissors' and computer_choice == 'paper') or \
         (user_choice == 'paper' and computer_choice == 'rock'):
        return "You win!"
    else:
        return "You lose!"

# Function to play one round of the game
def play_round(user_choice):
    choices = ['rock', 'paper', 'scissors']
    
    # Generate computer's choice randomly
    computer_choice = random.choice(choices)
    
    # Determine the winner
    result = determine_winner(user_choice, computer_choice)
    
    # Update score based on the result
    update_score(result)
    
    # Update the displayed choices and result
    result_label.config(text=f"Your choice: {user_choice.capitalize()} - Computer's choice: {computer_choice.capitalize()}\n{result}")
    
    # Change result text color based on the outcome
    if result == "You win!":
        result_label.config(fg="green")
    elif result == "You lose!":
        result_label.config(fg="red")
    else:
        result_label.config(fg="black")
    
    # Update score display
    score_label.config(text=f"Score: You - {user_score}, Computer - {computer_score}")
    
    # Check if someone has won the best of 3 series early
    if user_score > 1:
        result_label.config(text="You won the best of 3 series! Congratulations!")
        disable_buttons()
    elif computer_score > 1:
        result_label.config(text="The computer won the best of 3 series! Better luck next time.")
        disable_buttons()

# Update the score based on the result
def update_score(result):
    global user_score, computer_score
    if result == "You win!":
        user_score += 1
    elif result == "You lose!":
        computer_score += 1

# Disable buttons after the series is won
def disable_buttons():
    rock_button.config(state=tk.DISABLED)
    paper_button.config(state=tk.DISABLED)
    scissors_button.config(state=tk.DISABLED)

# Function to reset the game
def reset_game():
    global user_score, computer_score
    user_score = 0
    computer_score = 0
    score_label.config(text=f"Score: You - {user_score}, Computer - {computer_score}")
    result_label.config(text="Choose your option!")
    enable_buttons()

# Enable buttons after a reset
def enable_buttons():
    rock_button.config(state=tk.NORMAL)
    paper_button.config(state=tk.NORMAL)
    scissors_button.config(state=tk.NORMAL)

# Create the main window
window = tk.Tk()
window.title("Rock, Paper, Scissors")
window.geometry("500x500")  # Set the window size
window.config(bg="#f0f0f0")  # Set background color

# Initialize scores
user_score = 0
computer_score = 0

# Label to show the current score
score_label = tk.Label(window, text=f"Score: You - {user_score}, Computer - {computer_score}", font=("Arial", 16), bg="#f0f0f0")
score_label.grid(row=0, column=0, columnspan=3, pady=20)

# Label to show the result of each round
result_label = tk.Label(window, text="Choose your option!", font=("Arial", 16), bg="#f0f0f0")
result_label.grid(row=1, column=0, columnspan=3, pady=20)

# Buttons for user choices
rock_button = tk.Button(window, text="Rock", font=("Arial", 14), width=15, height=2, bg="#4CAF50", fg="white", command=lambda: play_round('rock'))
rock_button.grid(row=2, column=0, padx=20, pady=10, sticky="nsew")

paper_button = tk.Button(window, text="Paper", font=("Arial", 14), width=15, height=2, bg="#2196F3", fg="white", command=lambda: play_round('paper'))
paper_button.grid(row=2, column=1, padx=20, pady=10, sticky="nsew")

scissors_button = tk.Button(window, text="Scissors", font=("Arial", 14), width=15, height=2, bg="#f44336", fg="white", command=lambda: play_round('scissors'))
scissors_button.grid(row=2, column=2, padx=20, pady=10, sticky="nsew")

# Reset button
reset_button = tk.Button(window, text="Reset Game", font=("Arial", 14), width=15, height=2, bg="#9E9E9E", fg="white", command=reset_game)
reset_button.grid(row=3, column=0, columnspan=3, pady=20)

# Make the grid columns expand proportionally
window.grid_columnconfigure(0, weight=1)
window.grid_columnconfigure(1, weight=1)
window.grid_columnconfigure(2, weight=1)

# Start the tkinter main loop
window.mainloop()
